# The following testing scenario is covered:
#   block stream on an image without enough space
#     The snapshot image is a local image(filesystem)

- blockdev_stream_no_space:
    only Linux
    qemu_force_use_drive_expression = no
    virt_test_type = qemu
    type = blockdev_stream_no_space
    start_vm = yes
    kill_vm = yes
    base_tag = image1
    node = drive_image1
    snapshot_tag = image1sn
    storage_pools = default
    storage_pool = default
    on_error = report
    error_msg = 'No space left on device'
    target_path = /tmp/tmp_target_path
    tmp_image_file = /tmp/tmp_image_file
    pre_command = "mkdir -p ${target_path} && dd if=/dev/urandom of=${tmp_image_file} bs=1M count=100 && mkfs.ext4 ${tmp_image_file} && mount -o loop ${tmp_image_file} ${target_path}"
    post_command = "umount -f ${target_path} && rm -rf ${tmp_image_file} ${target_path}"
    pre_command_timeout = 30
    post_command_timeout = 30
    rebase_mode = unsafe

    image_name_image1sn = image1sn
    image_format_image1sn = qcow2

    # For the local snapshot image
    storage_type_default = directory
    enable_iscsi_image1sn = no
    enable_ceph_image1sn = no
    enable_gluster_image1sn = no
    enable_nbd_image1sn = no
    image_raw_device_image1sn = no
