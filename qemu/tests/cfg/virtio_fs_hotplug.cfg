- virtio_fs_hotplug:
    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1
    no Win2008 Win7
    no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
    type = virtio_fs_hotplug
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    clone_master = yes
    master_images_clone = image1
    remove_image_image1 = yes
    kill_vm = yes
    start_vm = yes
    Win10.i386:
        mem = 4096
    extra_filesystems = fs
    fs_target = 'myfs'
    fs_source_dir = virtio_fs_test/
    fs_dest = '/mnt/${fs_target}'
    fs_driver = virtio-fs
    fs_source_type = mount
    test_file = 'test_file'
    # create new sources if there is one already
    force_create_fs_source = no
    remove_fs_source = yes
    fs_driver_props = {"queue-size": 1024}
    share_mem = yes
    cmd_md5 = 'md5sum %s'
    io_timeout = 120
    s390, s390x:
        required_qemu = [5.2.0,)
        vm_mem_share = yes
        pre_command_noncritical = yes
        pre_command = "echo 3 > /proc/sys/vm/drop_caches"
        setup_hugepages = yes
        kvm_module_parameters = 'hpage=1'
        expected_hugepage_size = 1024
        cmd_dd = 'dd if=/dev/urandom of=%s bs=1M count=200 oflag=direct'
    !s390, s390x:
        guest_numa_nodes = shm0
        numa_memdev_shm0 = mem-mem1
        numa_nodeid_shm0 = 0
        cmd_dd = 'dd if=/dev/urandom of=%s bs=1M count=2048 oflag=direct'
        mem_devs = mem1
        backend_mem_mem1 = memory-backend-file
        mem-path_mem1 = /dev/shm
        size_mem1 = ${mem}M
        use_mem_mem1 = no
    Windows:
        # install winfsp tool
        i386, i686:
            install_path = 'C:\Program Files'
            devcon_dirname = 'x86'
        x86_64:
            install_path = 'C:\Program Files (x86)'
            devcon_dirname = 'amd64'
        driver_name = viofs
        install_cmd = 'msiexec /i WIN_UTILS:\winfsp.msi /qn'
        check_installed_cmd = 'dir "%s" |findstr /I winfsp'
        viofs_log_file = C:\viofs_log.txt
        viofs_exe_path = C:\virtiofs.exe
        viofs_exe_copy_cmd = xcopy %s C:\ /Y
        viofs_sc_create_cmd = 'sc create VirtioFsSvc binpath=${viofs_exe_path} start=auto'
        viofs_sc_create_cmd += ' depend="WinFsp.Launcher/VirtioFsDrv" DisplayName="Virtio FS Service"'
        viofs_sc_start_cmd = 'sc start VirtioFsSvc'
        viofs_sc_query_cmd = 'sc query VirtioFsSvc'
        viofs_debug_enable_cmd = 'reg add HKLM\Software\VirtIO-FS /v DebugFlags /d 0xFFFFFFFF /t REG_DWORD'
        viofs_log_enable_cmd = 'reg add HKLM\Software\VirtIO-FS /v DebugLogFile /d ${viofs_log_file} /t REG_SZ'
        viofs_reg_query_cmd = 'reg query HKLM\Software\VirtIO-FS'
        virtio_win_media_type = iso
        cdroms += " virtio"
        cmd_dd = 'dd if=/dev/random of=%s bs=1M count=200'
        cmd_md5 = "%s: && md5sum.exe %s && c:"
        devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    variants:
        - @default:
        - with_repetition:
            only plug.one_fs_source
            repeat_times = 50
    variants:
        - one_fs_source:
        - multi_fs_sources:
            no Windows
            q35, arm64-pci:
                pcie_extra_root_port = 2
            repeat_times = 1
            fs_target_fs1 = myfs1
            fs_source_dir_fs1 = virtio_fs1_test/
            fs_dest_fs1 = '/mnt/${fs_target_fs1}'
    variants:
        - plug:
            need_plug = yes
            multi_fs_sources:
                extra_filesystems += " fs1"
        - unplug:
            need_plug = no
            filesystems = fs
            force_create_fs_source = yes
            multi_fs_sources:
                filesystems += " fs1"
            repeat_times = 1
