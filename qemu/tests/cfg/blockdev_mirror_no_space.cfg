# The following testing scenario is covered:
#   block mirror to an image without enough space
#     The mirror image is a local image(filesystem)

- blockdev_mirror_no_space:
    only Linux
    qemu_force_use_drive_expression = no
    virt_test_type = qemu
    type = blockdev_mirror_no_space
    start_vm = no
    kill_vm = yes
    source_images = image1
    target_images = mirror1
    backup_options_image1 = sync
    sync = full
    storage_pools = default
    storage_pool = default
    error_msg = 'No space left on device'

    # Create mirror1 image under target_path
    target_path = /tmp/tmp_target_path
    tmp_image_file = /tmp/tmp_image_file
    pre_command = "mkdir -p ${target_path} && dd if=/dev/urandom of=${tmp_image_file} bs=1M count=100 &&"
    pre_command += " mkfs.ext4 ${tmp_image_file} && mount -o loop ${tmp_image_file} ${target_path}"
    post_command = "umount -f ${target_path} && rm -rf ${tmp_image_file} ${target_path}"
    pre_command_timeout = 30
    post_command_timeout = 30

    # For local mirror images
    image_format_mirror1 = qcow2
    image_name_mirror1 = mirror1
    storage_type_default = directory
    enable_iscsi_mirror1 = no
    enable_ceph_mirror1 = no
    enable_gluster_mirror1 = no
    enable_nbd_mirror1 = no
    image_raw_device_mirror1 = no
