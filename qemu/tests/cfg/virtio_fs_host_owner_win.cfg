- virtio_fs_host_owner_win:
    only Windows
    no Win2008 Win7
    type = virtio_fs_host_owner_win
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    start_vm = yes
    kill_vm = yes
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    vm_mem_share = yes
    vm_mem_backend = memory-backend-file
    vm_mem_backend_path = /dev/shm
    io_timeout = 600
    fs_dest = '/mnt/${fs_target}'
    driver_name = viofs
    # install winfsp tool
    i386, i686:
        install_winfsp_path = 'C:\Program Files'
        devcon_dirname = 'x86'
    x86_64:
        install_winfsp_path = 'C:\Program Files (x86)'
        devcon_dirname = 'amd64'
    install_winfsp_cmd = 'msiexec /i WIN_UTILS:\winfsp.msi /qn'
    check_installed_cmd = 'dir "%s" |findstr /I winfsp'
    viofs_log_file = C:\viofs_log.txt
    viofs_svc_name = VirtioFsSvc
    viofs_exe_path = C:\virtiofs.exe
    viofs_exe_copy_cmd = xcopy %s C:\ /Y
    viofs_sc_create_cmd = 'sc create ${viofs_svc_name} binpath=${viofs_exe_path} start=auto'
    viofs_sc_create_cmd += ' depend="WinFsp.Launcher/VirtioFsDrv" DisplayName="Virtio FS Service"'
    viofs_sc_start_cmd = 'sc start ${viofs_svc_name}'
    viofs_sc_query_cmd = 'sc query ${viofs_svc_name}'
    viofs_sc_delete_cmd = 'sc delete ${viofs_svc_name}'
    viofs_owner_query_cmd = 'reg query HKLM\Software\VirtIO-FS /v Owner'
    viofs_owner_delete_cmd = 'reg delete HKLM\Software\VirtIO-FS /v Owner /f'
    viofs_owner_enable_cmd = 'reg add HKLM\Software\VirtIO-FS /v Owner /d %s /t REG_SZ /f'
    viofs_reg_query_cmd = 'reg query HKLM\Software\VirtIO-FS'
    virtio_win_media_type = iso
    cdroms += " virtio"
    devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    # workaround to create a file instead of 'echo' cmd
    create_file_cmd = 'dd if=/dev/random of=%s bs=1M count=20'
    change_source_owner = chown test:test %s
    change_source_perm = chmod o+w %s
    variants:
        - privileged_vfsd:
            privileged = yes
            owner = "0:0 1111:1111"
        - no_privileged_vfsd:
            start_vm = no
            privileged = no
            new_user = user001
            add_user_cmd = 'useradd ${new_user}'
            del_user_cmd = 'userdel -r -f ${new_user}'
            fs_source_user_config = yes
            cmd_run_virtiofsd = '/usr/libexec/virtiofsd --socket-path %s'
