- qmp_command:
    no Host_RHEL.m5
    no RHEL.3 RHEL.4
    type = qmp_command
    virt_test_type = qemu
    monitors = 'qmp1'
    monitor_type_qmp1 = qmp
    # the method to run pre_cmd and post_cmd
    event_cmd_type = qmp_cmd
    variants:
        - qmp_query-kvm:
            qmp_cmd = "query-kvm"
            cmd_result_check = equal
            cmd_return_value = "[{'enabled': True, 'present': True}]"
        - qmp_query-mice:
            # No mouse support on s390x
            no s390x
            qmp_cmd = "query-mice"
            cmd_result_check = contain
            cmd_return_value = "[{'name': 'QEMU PS/2 Mouse'}, {'name': 'QEMU HID Tablet'}]"
            Host_RHEL.m6:
                cmd_return_value = "[{'name': 'QEMU PS/2 Mouse'}, {'name': 'QEMU USB Tablet'}]"
            pseries, arm64-pci, arm64-mmio:
                cmd_return_value = "[{'name': 'QEMU HID Tablet'}]"
        - qmp_query-status:
            pre_cmd = "stop"
            qmp_cmd = "query-status"
            post_cmd = "cont"
            cmd_result_check = equal
            cmd_return_value = "[{'status': 'paused', 'running': False}]"
            Host_RHEL.m8, Host_RHEL.m9.u0,  Host_RHEL.m9.u1, Host_RHEL.m9.u2, Host_RHEL.m9.u3, Host_RHEL.m9.u4:
                cmd_return_value = "[{'status': 'paused', 'singlestep': False, 'running': False}]"
        - qmp_query-name:
            qmp_cmd = "query-name"
            cmd_result_check = equal
        - qmp_query-uuid:
            uuid = "990ea161-6b67-47b2-b803-19fb01d30d12"
            qmp_cmd = "query-uuid"
            cmd_result_check = equal
        - qmp_query-version:
            qmp_cmd = "query-version"
            strict_match = "no"
            cmd_result_check = contain
        - qmp_query-blockstats:
            qmp_cmd = "query-blockstats"
            cmd_result_check = contain
            cmd_return_value = "['device', 'wr_highest_offset', 'rd_bytes', 'wr_operations', 'rd_operations', 'wr_bytes', 'parent', 'floppy0', 'sd0']"
            q35:
                cmd_return_value = "['device', 'wr_highest_offset', 'rd_bytes', 'wr_operations', 'rd_operations', 'wr_bytes', 'parent', 'sd0']"
            defaults = yes
        - qmp_memsave:
            event_cmd_type = host_cmd
            qmp_cmd = "memsave val=0, size=4096, filename=/var/tmp/memsave"
            pre_cmd = "rm -rf /var/tmp/memsave"
            post_cmd = "ls /var/tmp/memsave; true"
            cmd_result_check = post_contain
            cmd_return_value = "['memsave']"
        - qmp_pmemsave:
            event_cmd_type = host_cmd
            qmp_cmd = "pmemsave val=0, size=4096, filename=/var/tmp/pmemsave"
            pre_cmd = "rm -rf /var/tmp/pmemsave"
            post_cmd = "stat -c %s /var/tmp/pmemsave"
            cmd_result_check = "post_equal"
            cmd_return_value = "['4096']"
        - qmp_query-vnc:
            qmp_cmd = "query-vnc"
            cmd_result_check = contain
        - qmp_query-block:
            qmp_cmd = "query-block"
            cmd_result_check = contain
        - qmp_query-commands:
            qmp_cmd = "query-commands"
            cmd_result_check = contain
            cmd_return_value = "[{'name': 'balloon'}, {'name': 'cont'}, {'name': 'stop'}]"
        - qmp_cont:
            qmp_cmd = "cont"
            pre_cmd = "stop"
            post_cmd = "query-status"
            cmd_result_check = post_equal
            cmd_return_value = "[{'status': 'running', 'running': True}]"
            Host_RHEL.m8, Host_RHEL.m9.u0,  Host_RHEL.m9.u1, Host_RHEL.m9.u2, Host_RHEL.m9.u3, Host_RHEL.m9.u4:
                cmd_return_value = "[{'status': 'running', 'singlestep': False, 'running': True}]"
        - qmp_stop:
            pre_cmd = "stop"
            qmp_cmd = "query-status"
            cmd_result_check = equal
            cmd_return_value = "[{'status': 'paused', 'running': False}]"
            Host_RHEL.m8, Host_RHEL.m9.u0, Host_RHEL.m9.u1, Host_RHEL.m9.u2, Host_RHEL.m9.u3, Host_RHEL.m9.u4:
                cmd_return_value = "[{'status': 'paused', 'singlestep': False, 'running': False}]"
        - qmp_redhat_device_add:
            no ide
            only Host_RHEL.m6 Host_RHEL.m7
            pre_command += "qemu-img create -f qcow2 /tmp/device_add01.qcow2 100M"
            pre_cmd = "__com.redhat_drive_add file=/tmp/device_add01.qcow2,format=qcow2,id=device_add01"
            qmp_cmd = "device_add driver=virtio-blk-pci,drive=device_add01,id=device_add01"
            q35:
                pci_controllers += " pcie_root_port_qmp"
                type_pcie_root_port_qmp = "pcie-root-port"
                qmp_cmd += ",bus=pcie_root_port_qmp"
            post_cmd = "query-block"
            cmd_result_check = post_contain
            cmd_return_value = "[{'device': 'device_add01'}]"
            post_command += " rm -rf /tmp/device_add01.qcow2;"
        - qmp_device_del:
            no ide
            images += " device_del01"
            image_format_device_del01 = "qcow2"
            drive_format_device_del01 = "virtio"
            image_size_device_del01 = "100M"
            image_name_device_del01 = "/tmp/device_del01.qcow2"
            force_create_image_device_del01 = "yes"
            remove_image_device_del01 = "yes"
            qmp_cmd = "device_del id=device_del01"
            post_cmd = "query-block"
            cmd_result_check = post_not_contain
            cmd_return_value = "[{'device': 'device_del01'}]"
        - qmp_block_resize:
            no Windows
            images += " stg"
            drive_format_stg = virtio
            image_name_stg = images/qmp_block_resize
            image_size_stg = 10G
            force_create_image_stg = yes
            remove_image_stg = yes
            kill_vm = yes
            qmp_cmd = "block_resize device=drive_stg, size=32212254720"
            cmd_result_check = post_contain
            strict_match = "no"
            post_cmd = dmesg | grep virtio_blk
            # 62914560 512-byte logical blocks
            cmd_return_value = "['new size: 62914560']"
            event_cmd_type = guest_cmd
        - qmp_negative:
            qmp_cmd = subcommands
            cmd_result_check = equal
            cmd_return_value = "["unknown command: 'subcommands'\r\n"]"
        - qmp_human-monitor-command:
            qmp_cmd = human-monitor-command command-line=info kvm
            cmd_result_check = equal
            cmd_return_value = "['kvm support: enabled\r\n']"
        - qmp__com.redhat.drive_del:
            only Host_RHEL.m6 Host_RHEL.m7
            pre_command += "qemu-img create -f qcow2 /tmp/__com.redhat.drive_del01.qcow2 100M"
            pre_cmd = "__com.redhat_drive_add file=/tmp/__com.redhat.drive_del01.qcow2, format=qcow2, id=com.redhat.drive_del01;query-block"
            qmp_cmd = "__com.redhat_drive_del id=com.redhat.drive_del01"
            post_cmd = "query-block"
            cmd_result_check = post_not_contain
            cmd_return_value = "['com.redhat.drive_del01']"
            post_command += " rm -rf /tmp/__com.redhat.drive_del01.qcow2;"
        - qmp_netdev_del:
            nics += " del01"
            netdev_id_del01 = "netdev_del01"
            device_id_del01 = "device_del01"
            ifname_del01 = "ifname_del01"
            qmp_cmd = "device_del id=device_del01; netdev_del id=netdev_del01"
            # With human-monitor-command,type of post output is string, not dict
            post_cmd = "human-monitor-command command-line=info network"
            cmd_result_check = post_not_contain
            strict_match = "no"
            cmd_return_value = "['device_del01', 'netdev_del01']"
        - qmp_query-pci:
            qmp_cmd = "query-pci"
            cmd_result_check = contain
            cmd_return_value = "['function', 'regions', 'qdev_id']"
            i440fx:
                cmd_return_value = "[{'desc': 'Host bridge'}, {'desc': 'ISA bridge'}, {'desc': 'IDE controller'}, {'desc': 'VGA controller'}, {'desc': 'Ethernet controller'}]"
            q35:
                cmd_return_value = "[{'desc': 'Host bridge'}, {'desc': 'ISA bridge'}, {'desc': 'SATA controller'}, {'desc': 'VGA controller'}, {'desc': 'Ethernet controller'}]"
        - qmp_query-qmp-schema:
            qmp_cmd = "query-qmp-schema"
            cmd_result_check = contain
            cmd_return_value = "[{'name': 'BALLOON_CHANGE'}, {'name': 'STOP'}, {'name': 'WATCHDOG'}]"
        - qmp_device-list-properties:
            qmp_cmd = "device-list-properties typename=virtio-balloon-pci"
            cmd_result_check = contain
            cmd_return_value = ['multifunction']
            Host_RHEL.m7, Host_RHEL.m8.u0, Host_RHEL.m8.u1, Host_RHEL.m8.u2:
                cmd_return_value = ['command_serr_enable', 'multifunction']
            s390x:
                qmp_cmd = "device-list-properties typename=virtio-balloon-ccw"
                cmd_return_value = "['notify_on_empty', 'ioeventfd', 'any_layout', 'devno', 'indirect_desc', 'guest-stats', 'guest-stats-polling-interval', 'event_idx', 'virtio-backend', 'iommu_platform', 'deflate-on-oom', 'max_revision']"
            aarch64:
                cmd_return_value = "['multifunction', 'ats', 'notify_on_empty']"
        - qmp_query-command-line-options:
            qmp_cmd = "query-command-line-options"
            cmd_result_check = contain
            cmd_return_value = "[{'option': 'option-rom'}, {'name': 'bootindex'}, {'name': 'romfile'}]"
        - qmp_query-target:
            qmp_cmd = "query-target"
            cmd_result_check = equal
        - qmp_query-machines:
            qmp_cmd = "query-machines"
            cmd_result_check = "contain"
        - qmp_qom-list-types_conventional:
            qmp_cmd = "qom-list-types implements=conventional-pci-device"
            cmd_result_check = "contain"
            cmd_return_value = "[{'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-net-pci'}, {'name': 'rtl8139'}]"
            aarch64:
                cmd_return_value = "[{'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-net-pci'}]"
        - qmp_qom-list-types_pcie:
            qmp_cmd = "qom-list-types implements=pci-express-device"
            cmd_result_check = "contain"
            cmd_return_value = "[{'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-blk-pci'}, {'name': 'e1000e'}]"
            aarch64:
                cmd_return_value = "[{'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-blk-pci'}]"
        - qmp_qom-list-types_pci:
            qmp_cmd = "qom-list-types implements=pci-device"
            cmd_result_check = "contain"
            cmd_return_value = "[{'name': 'rtl8139'}, {'name': 'e1000e'}, {'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-blk-pci'}]"
            aarch64:
                cmd_return_value = "[{'name': 'vfio-pci'}, {'name': 'qemu-xhci'}, {'name': 'virtio-blk-pci'}]"
        - qmp_query-stats_vm:
            required_qemu = [7.1.0,)
            qmp_cmd = "query-stats target=vm"
            cmd_result_check = "contain"
            cmd_return_value = "['provider', 'stats', 'name', 'value']"
        - qmp_query-stats_vcpu:
            required_qemu = [7.1.0,)
            qmp_cmd = "query-stats target=vcpu"
            cmd_result_check = "contain"
            cmd_return_value = "['provider', 'stats', 'name', 'value', 'qom-path']"
        - qmp_query-stats-schemas:
            required_qemu = [7.1.0,)
            qmp_cmd = "query-stats-schemas"
            cmd_result_check = "contain"
            cmd_return_value = "['provider', 'stats', 'name', 'exponent', 'type', 'unit', 'target', 'base']"
