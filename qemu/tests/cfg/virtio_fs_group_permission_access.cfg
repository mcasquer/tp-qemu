- virtio_fs_group_permission_access:
    type = virtio_fs_group_permission_access
    no Host_RHEL.m8, Host_RHEL.m7, Host_RHEL.m6
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    s390, s390x:
        required_qemu = [5.2.0,)
        vm_mem_share = yes
        pre_command_noncritical = yes
        pre_command = "echo 3 > /proc/sys/vm/drop_caches"
        setup_hugepages = yes
        kvm_module_parameters = 'hpage=1'
        expected_hugepage_size = 1024
    Win10.i386:
        mem = 4096
    kill_vm = yes
    start_vm = no
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = no
    fs_source_user_config = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    fs_driver_props = {"queue-size": 1024}
    mem_devs = mem1
    backend_mem_mem1 = memory-backend-file
    mem-path_mem1 = /dev/shm
    size_mem1 = ${mem}M
    use_mem_mem1 = no
    share_mem = yes
    !s390, s390x:
        guest_numa_nodes = shm0
        numa_memdev_shm0 = mem-mem1
        numa_nodeid_shm0 = 0
    # install winfsp tool
    i386, i686:
        install_winfsp_path = 'C:\Program Files'
        devcon_dirname = 'x86'
    x86_64:
        install_winfsp_path = 'C:\Program Files (x86)'
        devcon_dirname = 'amd64'
    virtio_win_media_type = iso
    cdroms += " virtio"
    io_timeout = 600
    fs_dest = '/mnt/${fs_target}'
    driver_name = viofs
    cmd_run_virtiofsd = '/usr/libexec/virtiofsd --socket-path %s'
    new_user = "user001 user002"
    add_user_cmd = "useradd %s"
    del_user_cmd = "userdel -r -f %s"
    Windows:
        cmd_dd = 'dd if=/dev/random of=%s bs=1M count=100'
        devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    variants:
        - @default:
        - with_nfs_source:
            setup_local_nfs = yes
            nfs_mount_options = rw
            export_options = 'rw,insecure,no_root_squash,async'
            export_dir = /nfs/${fs_target}
            nfs_mount_src = /nfs/${fs_target}
